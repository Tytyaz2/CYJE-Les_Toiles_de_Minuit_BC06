services:
  # Base de donn√©es PostgreSQL
  db:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: symfony_user
      POSTGRES_PASSWORD: symfony_password
      POSTGRES_DB: symfony_db
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - symfony-network

  # Backend Symfony - PHP-FPM
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: php
    restart: unless-stopped
    working_dir: /var/www/symfony
    volumes:
      - ./API_Backend_Symfony:/var/www/symfony
    depends_on:
      - db
    networks:
      - symfony-network

  # Serveur web Nginx
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./API_Backend_Symfony:/var/www/symfony
    depends_on:
      - php
    networks:
      - symfony-network

  # Interface Adminer pour PostgreSQL
  adminer:
    image: adminer
    container_name: adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - symfony-network

volumes:
  db_data:

networks:
  symfony-network:
    driver: bridge
